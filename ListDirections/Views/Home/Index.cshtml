@using ListDirections.Models;
@model MainProcess[]

<h3> LIST OF PROCESES </h3>

<table>
    <tr style=" background-color:chartreuse">
        <th><p> Name of  </p></th>
        <th><p> Status of process </p></th>
        <th><p> Work with process </p></th>
        <th><p> Schedule of process </p> </th>
    </tr>
    
    @foreach (MainProcess p in Model)
    {
        <tr>
            <td>
                @p.Name
            </td>
            <td> <!-- Status of process -->
                @{
                    string color = System.Drawing.Color.White.ToString();
                    string status_info = string.Empty;
                    switch (p.CurrentStateName)
                    {
                        case ProcState.Fail:
                            color = System.Drawing.Color.Red.ToString();
                            status_info = "<br />" + p.CurrentResult.ErrorMessage;
                            break;
                        case ProcState.HaveToRun:
                            color = System.Drawing.Color.Orange.ToString();
                            status_info = p.PlanDate.ToString(" - dd.MM.yyyy HH:mm");
                            break;
                        case ProcState.Running:
                            color = System.Drawing.Color.Yellow.ToString();
                            break;
                        case ProcState.Success:
                            color = System.Drawing.Color.Green.ToString();
                            status_info = p.CurrentResult.TimeFinish.Value.ToString(" - dd.MM.yyyy HH:mm");
                            break;
                    }
                    <span style="background-color:@color"> @p.CurrentStateName </span> @status_info
                }
            </td>
            <td> <!-- Work with process -->
                @if (p.CurrentStateName == ProcState.HaveToRun )
                {
                    <input type="button" name="start_process_@p.ID" value="start process" onclick="Start_Function(@p.ID)">
                }
                else
                {
                    <h4>Steps to execute</h4>
                    <ol>
                        @foreach (PreRequisite step in p.StepsToRun)
                        {
                            <li>
                                <p><b>@step.Name</b></p>
                                <p>@step.Instruction</p>
                                @{
                                    History history = p.Current_State.FirstOrDefault(h => h.EventID == step.ID);
                                    bool is_current = (p.CurrentStep != null && step.ID == p.CurrentStep.ID);
                                    
                                    if (history == null)
                                    {
                                        if (is_current)
                                        {
                                            <input type="button" name="start_step_@step.ID" value="start" />
                                        }
                                    }
                                    else
                                    {
                                        if (history.TimeFinish.HasValue && history.Success.HasValue && history.Success.Value)
                                        {
                                            <p>Finished at @history.TimeFinish.Value.ToString("dd.MM.yyyy HH:mm") by @history.UserName.</p>
                                        }
                                        else
                                        {
                                            <p>Started at @history.TimeStart.ToString("dd.MM.yyyy HH:mm") by @history.UserName.</p>
                                            if (is_current)
                                            {
                                                <input type="button" name="finish_step_@step.ID" value="finish" />
                                            }
                                            if (!string.IsNullOrEmpty(history.ErrorMessage))
                                            {
                                                <p><b>Error:</b> @history.ErrorMessage</p>
                                            }
                                        }
                                    }

                                }
                            </li>     
                        }
                    </ol>
                }    

                @if ((p.CurrentStep == null && p.CurrentStateName == ProcState.Running) || p.CurrentStateName == ProcState.Fail)
                {
                    <p> <input type="button" name="execute_script_@p.ID" value="execute script"> </p> 
                }
            </td>      
            <td> <!-- Schedule of process -->
                <ol>
                    @foreach (Schedule sch in p.Process_Schedule)
                    {   
                        if (sch.DayOfWeek.HasValue)
                        {
                            <li>Each @(((DayOfWeek)sch.DayOfWeek-1).ToString("g")) at @sch.Hour.ToString("00") : @sch.Minute.ToString("00")</li>           
                        }
                        if (sch.DayOfMonth.HasValue)
                        {
                            <li>Each @sch.DayOfMonth-th day of month at @sch.Hour.ToString("00") : @sch.Minute.ToString("00")</li>
                        }
                    }
                </ol>
            </td>   
        </tr>
    }
</table>

@section PageStyle
{
    <style>
        TABLE {
            border-collapse: collapse;
        }

        TD, TH {
            padding: 3px;
            border: 2px solid black;
        }
    </style>
}

@section scripts
{
  <script>
      function Start_Function(id) {
          document.location = "/Home/StartProcess/" + id;
      }
  </script> 
}
